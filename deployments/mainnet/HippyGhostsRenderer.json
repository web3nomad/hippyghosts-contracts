{
  "address": "0x856bd414d7C4718f844795b30510AF2f5FEe2Ee1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "hippyGhosts_",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "baseURI_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MERKLE_ROOT",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hippyGhosts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "baseURI_",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x4afb73e4d5d1cdc891a371489d75b91d522ae1351b1fc59468a04f9cd4aefc73",
  "receipt": {
    "to": null,
    "from": "0x03793EB77F02B730B1842AFC4f4F66B8305F16a3",
    "contractAddress": "0x856bd414d7C4718f844795b30510AF2f5FEe2Ee1",
    "transactionIndex": 166,
    "gasUsed": "673009",
    "logsBloom": "0x
    "blockHash": "0x4fc0c09b25cb7c16e3b4eac5347bf1c92a1a74d3dafe56ea8d08710f16e2e026",
    "transactionHash": "0x4afb73e4d5d1cdc891a371489d75b91d522ae1351b1fc59468a04f9cd4aefc73",
    "logs": [
      {
        "transactionIndex": 166,
        "blockNumber": 14771444,
        "transactionHash": "0x4afb73e4d5d1cdc891a371489d75b91d522ae1351b1fc59468a04f9cd4aefc73",
        "address": "0x856bd414d7C4718f844795b30510AF2f5FEe2Ee1",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000003793eb77f02b730b1842afc4f4f66b8305f16a3"
        ],
        "data": "0x",
        "logIndex": 138,
        "blockHash": "0x4fc0c09b25cb7c16e3b4eac5347bf1c92a1a74d3dafe56ea8d08710f16e2e026"
      }
    ],
    "blockNumber": 14771444,
    "cumulativeGasUsed": "8223913",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x2a5503280d66A47DE0754ddc73252CA9a4e93dcb",
    "ipfs://bafybeiglzxoeyxwt3psivtxd34kd6yiifbsovs23xumqpobluoxakbpkiu/"
  ],
  "numDeployments": 1,
  "solcInputHash": "6c473bddb0a8ea2d420b95dde6519518",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hippyGhosts_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"baseURI_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MERKLE_ROOT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hippyGhosts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI_\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/HippyGhostsRenderer.sol\":\"HippyGhostsRenderer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"},\"src/HippyGhostsRenderer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.11;\\n\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract HippyGhostsRenderer is Ownable {\\n    using Strings for uint256;\\n\\n    bytes32 constant public MERKLE_ROOT = 0x58d247a687ef48f010e2e6107a04d575787163cfb0d70543c421a5001e9f5aab;\\n    address public immutable hippyGhosts;\\n    string public baseURI;\\n\\n    constructor(\\n        address hippyGhosts_,\\n        string memory baseURI_\\n    ) {\\n        hippyGhosts = hippyGhosts_;\\n        baseURI = baseURI_;\\n    }\\n\\n    function setBaseURI(string memory baseURI_) external onlyOwner {\\n        baseURI = baseURI_;\\n    }\\n\\n    function tokenURI(uint256 tokenId) external view returns (string memory) {\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n}\\n\",\"keccak256\":\"0x9ad426f6c9ffc71866176c156cc87a06e3cf804396bc9602d956238d1d09f83b\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162000bc138038062000bc1833981016040819052620000349162000176565b6200003f336200006a565b6001600160a01b038216608052805162000061906001906020840190620000ba565b505050620002b3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000c89062000276565b90600052602060002090601f016020900481019282620000ec576000855562000137565b82601f106200010757805160ff191683800117855562000137565b8280016001018555821562000137579182015b82811115620001375782518255916020019190600101906200011a565b506200014592915062000149565b5090565b5b808211156200014557600081556001016200014a565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200018a57600080fd5b82516001600160a01b0381168114620001a257600080fd5b602084810151919350906001600160401b0380821115620001c257600080fd5b818601915086601f830112620001d757600080fd5b815181811115620001ec57620001ec62000160565b604051601f8201601f19908116603f0116810190838211818310171562000217576200021762000160565b8160405282815289868487010111156200023057600080fd5b600093505b8284101562000254578484018601518185018701529285019262000235565b82841115620002665760008684830101525b8096505050505050509250929050565b600181811c908216806200028b57607f821691505b60208210811415620002ad57634e487b7160e01b600052602260045260246000fd5b50919050565b6080516108f2620002cf600039600061012301526108f26000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100f9578063b75ffd561461011e578063c87b56dd14610145578063f2fde38b1461015857600080fd5b806351e75e8b1461008d57806355f804b3146100c75780636c0360eb146100dc578063715018a6146100f1575b600080fd5b6100b47f58d247a687ef48f010e2e6107a04d575787163cfb0d70543c421a5001e9f5aab81565b6040519081526020015b60405180910390f35b6100da6100d5366004610578565b61016b565b005b6100e46101b5565b6040516100be9190610659565b6100da610243565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100be565b6101067f000000000000000000000000000000000000000000000000000000000000000081565b6100e461015336600461068c565b610279565b6100da6101663660046106a5565b6102d8565b6000546001600160a01b0316331461019e5760405162461bcd60e51b8152600401610195906106d5565b60405180910390fd5b80516101b19060019060208401906104c9565b5050565b600180546101c29061070a565b80601f01602080910402602001604051908101604052809291908181526020018280546101ee9061070a565b801561023b5780601f106102105761010080835404028352916020019161023b565b820191906000526020600020905b81548152906001019060200180831161021e57829003601f168201915b505050505081565b6000546001600160a01b0316331461026d5760405162461bcd60e51b8152600401610195906106d5565b6102776000610373565b565b606060006001805461028a9061070a565b9050116102a657604051806020016040528060008152506102d2565b60016102b1836103c3565b6040516020016102c2929190610761565b6040516020818303038152906040525b92915050565b6000546001600160a01b031633146103025760405162461bcd60e51b8152600401610195906106d5565b6001600160a01b0381166103675760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610195565b61037081610373565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060816103e75750506040805180820190915260018152600360fc1b602082015290565b8160005b811561041157806103fb8161081e565b915061040a9050600a8361084f565b91506103eb565b60008167ffffffffffffffff81111561042c5761042c610562565b6040519080825280601f01601f191660200182016040528015610456576020820181803683370190505b5090505b84156104c15761046b600183610863565b9150610478600a8661087a565b61048390603061088e565b60f81b818381518110610498576104986108a6565b60200101906001600160f81b031916908160001a9053506104ba600a8661084f565b945061045a565b949350505050565b8280546104d59061070a565b90600052602060002090601f0160209004810192826104f7576000855561053d565b82601f1061051057805160ff191683800117855561053d565b8280016001018555821561053d579182015b8281111561053d578251825591602001919060010190610522565b5061054992915061054d565b5090565b5b80821115610549576000815560010161054e565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561058a57600080fd5b813567ffffffffffffffff808211156105a257600080fd5b818401915084601f8301126105b657600080fd5b8135818111156105c8576105c8610562565b604051601f8201601f19908116603f011681019083821181831017156105f0576105f0610562565b8160405282815287602084870101111561060957600080fd5b826020860160208301376000928101602001929092525095945050505050565b60005b8381101561064457818101518382015260200161062c565b83811115610653576000848401525b50505050565b6020815260008251806020840152610678816040850160208701610629565b601f01601f19169190910160400192915050565b60006020828403121561069e57600080fd5b5035919050565b6000602082840312156106b757600080fd5b81356001600160a01b03811681146106ce57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061071e57607f821691505b6020821081141561073f57634e487b7160e01b600052602260045260246000fd5b50919050565b60008151610757818560208601610629565b9290920192915050565b600080845481600182811c91508083168061077d57607f831692505b602080841082141561079d57634e487b7160e01b86526022600452602486fd5b8180156107b157600181146107c2576107ef565b60ff198616895284890196506107ef565b60008b81526020902060005b868110156107e75781548b8201529085019083016107ce565b505084890196505b5050505050506107ff8185610745565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b600060001982141561083257610832610808565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261085e5761085e610839565b500490565b60008282101561087557610875610808565b500390565b60008261088957610889610839565b500690565b600082198211156108a1576108a1610808565b500190565b634e487b7160e01b600052603260045260246000fdfea26469706673582212204f8d35e33f3404f33b413a27f0f8c1a3dbb4dee42bf35c242797b99dc11a368764736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c80638da5cb5b1161005b5780638da5cb5b146100f9578063b75ffd561461011e578063c87b56dd14610145578063f2fde38b1461015857600080fd5b806351e75e8b1461008d57806355f804b3146100c75780636c0360eb146100dc578063715018a6146100f1575b600080fd5b6100b47f58d247a687ef48f010e2e6107a04d575787163cfb0d70543c421a5001e9f5aab81565b6040519081526020015b60405180910390f35b6100da6100d5366004610578565b61016b565b005b6100e46101b5565b6040516100be9190610659565b6100da610243565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100be565b6101067f000000000000000000000000000000000000000000000000000000000000000081565b6100e461015336600461068c565b610279565b6100da6101663660046106a5565b6102d8565b6000546001600160a01b0316331461019e5760405162461bcd60e51b8152600401610195906106d5565b60405180910390fd5b80516101b19060019060208401906104c9565b5050565b600180546101c29061070a565b80601f01602080910402602001604051908101604052809291908181526020018280546101ee9061070a565b801561023b5780601f106102105761010080835404028352916020019161023b565b820191906000526020600020905b81548152906001019060200180831161021e57829003601f168201915b505050505081565b6000546001600160a01b0316331461026d5760405162461bcd60e51b8152600401610195906106d5565b6102776000610373565b565b606060006001805461028a9061070a565b9050116102a657604051806020016040528060008152506102d2565b60016102b1836103c3565b6040516020016102c2929190610761565b6040516020818303038152906040525b92915050565b6000546001600160a01b031633146103025760405162461bcd60e51b8152600401610195906106d5565b6001600160a01b0381166103675760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610195565b61037081610373565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060816103e75750506040805180820190915260018152600360fc1b602082015290565b8160005b811561041157806103fb8161081e565b915061040a9050600a8361084f565b91506103eb565b60008167ffffffffffffffff81111561042c5761042c610562565b6040519080825280601f01601f191660200182016040528015610456576020820181803683370190505b5090505b84156104c15761046b600183610863565b9150610478600a8661087a565b61048390603061088e565b60f81b818381518110610498576104986108a6565b60200101906001600160f81b031916908160001a9053506104ba600a8661084f565b945061045a565b949350505050565b8280546104d59061070a565b90600052602060002090601f0160209004810192826104f7576000855561053d565b82601f1061051057805160ff191683800117855561053d565b8280016001018555821561053d579182015b8281111561053d578251825591602001919060010190610522565b5061054992915061054d565b5090565b5b80821115610549576000815560010161054e565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561058a57600080fd5b813567ffffffffffffffff808211156105a257600080fd5b818401915084601f8301126105b657600080fd5b8135818111156105c8576105c8610562565b604051601f8201601f19908116603f011681019083821181831017156105f0576105f0610562565b8160405282815287602084870101111561060957600080fd5b826020860160208301376000928101602001929092525095945050505050565b60005b8381101561064457818101518382015260200161062c565b83811115610653576000848401525b50505050565b6020815260008251806020840152610678816040850160208701610629565b601f01601f19169190910160400192915050565b60006020828403121561069e57600080fd5b5035919050565b6000602082840312156106b757600080fd5b81356001600160a01b03811681146106ce57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061071e57607f821691505b6020821081141561073f57634e487b7160e01b600052602260045260246000fd5b50919050565b60008151610757818560208601610629565b9290920192915050565b600080845481600182811c91508083168061077d57607f831692505b602080841082141561079d57634e487b7160e01b86526022600452602486fd5b8180156107b157600181146107c2576107ef565b60ff198616895284890196506107ef565b60008b81526020902060005b868110156107e75781548b8201529085019083016107ce565b505084890196505b5050505050506107ff8185610745565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b600060001982141561083257610832610808565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261085e5761085e610839565b500490565b60008282101561087557610875610808565b500390565b60008261088957610889610839565b500690565b600082198211156108a1576108a1610808565b500190565b634e487b7160e01b600052603260045260246000fdfea26469706673582212204f8d35e33f3404f33b413a27f0f8c1a3dbb4dee42bf35c242797b99dc11a368764736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "src/HippyGhostsRenderer.sol:HippyGhostsRenderer",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2325,
        "contract": "src/HippyGhostsRenderer.sol:HippyGhostsRenderer",
        "label": "baseURI",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}