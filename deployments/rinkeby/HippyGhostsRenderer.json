{
  "address": "0x02Cc5937cEDcC8626Ec69b0D7d0fbD14325Db1ba",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "hippyGhosts_",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "baseURI_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MERKLE_ROOT",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hippyGhosts",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "selfDestruct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "baseURI_",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x6ec3fda1e4f783cda655d381dabcec161de32ea47a526b2e26170e19878c19fb",
  "receipt": {
    "to": null,
    "from": "0x03793EB77F02B730B1842AFC4f4F66B8305F16a3",
    "contractAddress": "0x02Cc5937cEDcC8626Ec69b0D7d0fbD14325Db1ba",
    "transactionIndex": 6,
    "gasUsed": "664231",
    "logsBloom": "0x
    "blockHash": "0xd38f8f928cb9e207ad42eca187436162e3bc4bb48deb078849d5ad80818c42c6",
    "transactionHash": "0x6ec3fda1e4f783cda655d381dabcec161de32ea47a526b2e26170e19878c19fb",
    "logs": [
      {
        "transactionIndex": 6,
        "blockNumber": 10662861,
        "transactionHash": "0x6ec3fda1e4f783cda655d381dabcec161de32ea47a526b2e26170e19878c19fb",
        "address": "0x02Cc5937cEDcC8626Ec69b0D7d0fbD14325Db1ba",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000003793eb77f02b730b1842afc4f4f66b8305f16a3"
        ],
        "data": "0x",
        "logIndex": 27,
        "blockHash": "0xd38f8f928cb9e207ad42eca187436162e3bc4bb48deb078849d5ad80818c42c6"
      }
    ],
    "blockNumber": 10662861,
    "cumulativeGasUsed": "4220018",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xEDbD71e25714e4E96ca305322232cBC53cc89F08",
    "https://api.hippyghosts.io/~/storage/tokens/test/"
  ],
  "numDeployments": 1,
  "solcInputHash": "d92bf60d5b71dcb43525648b303615f6",
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"hippyGhosts_\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"baseURI_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MERKLE_ROOT\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hippyGhosts\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"selfDestruct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"baseURI_\",\"type\":\"string\"}],\"name\":\"setBaseURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/HippyGhostsRenderer.sol\":\"HippyGhostsRenderer\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"},\"src/HippyGhostsRenderer.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.11;\\n\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract HippyGhostsRenderer is Ownable {\\n    using Strings for uint256;\\n\\n    bytes32 constant public MERKLE_ROOT = 0x58d247a687ef48f010e2e6107a04d575787163cfb0d70543c421a5001e9f5aab;\\n    address public immutable hippyGhosts;\\n    string public baseURI;\\n\\n    constructor(\\n        address hippyGhosts_,\\n        string memory baseURI_\\n    ) {\\n        hippyGhosts = hippyGhosts_;\\n        baseURI = baseURI_;\\n    }\\n\\n    function setBaseURI(string memory baseURI_) external onlyOwner {\\n        baseURI = baseURI_;\\n    }\\n\\n    function tokenURI(uint256 tokenId) external view returns (string memory) {\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    function selfDestruct() external onlyOwner {\\n        selfdestruct(payable(msg.sender));\\n    }\\n\\n}\\n\",\"keccak256\":\"0x97e7321369204c3fc50386f96a15193462447d6a1d7bad430e047e9180cc2789\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162000c0138038062000c01833981016040819052620000349162000176565b6200003f336200006a565b6001600160a01b038216608052805162000061906001906020840190620000ba565b505050620002b3565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b828054620000c89062000276565b90600052602060002090601f016020900481019282620000ec576000855562000137565b82601f106200010757805160ff191683800117855562000137565b8280016001018555821562000137579182015b82811115620001375782518255916020019190600101906200011a565b506200014592915062000149565b5090565b5b808211156200014557600081556001016200014a565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200018a57600080fd5b82516001600160a01b0381168114620001a257600080fd5b602084810151919350906001600160401b0380821115620001c257600080fd5b818601915086601f830112620001d757600080fd5b815181811115620001ec57620001ec62000160565b604051601f8201601f19908116603f0116810190838211818310171562000217576200021762000160565b8160405282815289868487010111156200023057600080fd5b600093505b8284101562000254578484018601518185018701529285019262000235565b82841115620002665760008684830101525b8096505050505050509250929050565b600181811c908216806200028b57607f821691505b60208210811415620002ad57634e487b7160e01b600052602260045260246000fd5b50919050565b608051610932620002cf600039600061013601526109326000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146101045780639cb8a26a14610129578063b75ffd5614610131578063c87b56dd14610158578063f2fde38b1461016b57600080fd5b806351e75e8b1461009857806355f804b3146100d25780636c0360eb146100e7578063715018a6146100fc575b600080fd5b6100bf7f58d247a687ef48f010e2e6107a04d575787163cfb0d70543c421a5001e9f5aab81565b6040519081526020015b60405180910390f35b6100e56100e03660046105b8565b61017e565b005b6100ef6101c8565b6040516100c99190610699565b6100e5610256565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100c9565b6100e561028c565b6101117f000000000000000000000000000000000000000000000000000000000000000081565b6100ef6101663660046106cc565b6102b9565b6100e56101793660046106e5565b610318565b6000546001600160a01b031633146101b15760405162461bcd60e51b81526004016101a890610715565b60405180910390fd5b80516101c4906001906020840190610509565b5050565b600180546101d59061074a565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061074a565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b505050505081565b6000546001600160a01b031633146102805760405162461bcd60e51b81526004016101a890610715565b61028a60006103b3565b565b6000546001600160a01b031633146102b65760405162461bcd60e51b81526004016101a890610715565b33ff5b60606000600180546102ca9061074a565b9050116102e65760405180602001604052806000815250610312565b60016102f183610403565b6040516020016103029291906107a1565b6040516020818303038152906040525b92915050565b6000546001600160a01b031633146103425760405162461bcd60e51b81526004016101a890610715565b6001600160a01b0381166103a75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101a8565b6103b0816103b3565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060816104275750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610451578061043b8161085e565b915061044a9050600a8361088f565b915061042b565b60008167ffffffffffffffff81111561046c5761046c6105a2565b6040519080825280601f01601f191660200182016040528015610496576020820181803683370190505b5090505b8415610501576104ab6001836108a3565b91506104b8600a866108ba565b6104c39060306108ce565b60f81b8183815181106104d8576104d86108e6565b60200101906001600160f81b031916908160001a9053506104fa600a8661088f565b945061049a565b949350505050565b8280546105159061074a565b90600052602060002090601f016020900481019282610537576000855561057d565b82601f1061055057805160ff191683800117855561057d565b8280016001018555821561057d579182015b8281111561057d578251825591602001919060010190610562565b5061058992915061058d565b5090565b5b80821115610589576000815560010161058e565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156105ca57600080fd5b813567ffffffffffffffff808211156105e257600080fd5b818401915084601f8301126105f657600080fd5b813581811115610608576106086105a2565b604051601f8201601f19908116603f01168101908382118183101715610630576106306105a2565b8160405282815287602084870101111561064957600080fd5b826020860160208301376000928101602001929092525095945050505050565b60005b8381101561068457818101518382015260200161066c565b83811115610693576000848401525b50505050565b60208152600082518060208401526106b8816040850160208701610669565b601f01601f19169190910160400192915050565b6000602082840312156106de57600080fd5b5035919050565b6000602082840312156106f757600080fd5b81356001600160a01b038116811461070e57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061075e57607f821691505b6020821081141561077f57634e487b7160e01b600052602260045260246000fd5b50919050565b60008151610797818560208601610669565b9290920192915050565b600080845481600182811c9150808316806107bd57607f831692505b60208084108214156107dd57634e487b7160e01b86526022600452602486fd5b8180156107f157600181146108025761082f565b60ff1986168952848901965061082f565b60008b81526020902060005b868110156108275781548b82015290850190830161080e565b505084890196505b50505050505061083f8185610785565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b600060001982141561087257610872610848565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261089e5761089e610879565b500490565b6000828210156108b5576108b5610848565b500390565b6000826108c9576108c9610879565b500690565b600082198211156108e1576108e1610848565b500190565b634e487b7160e01b600052603260045260246000fdfea26469706673582212206173dd485c3a02ebe50ce22d93ec16199b5f9064bb66e498d6a59f4ebc3807ec64736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b146101045780639cb8a26a14610129578063b75ffd5614610131578063c87b56dd14610158578063f2fde38b1461016b57600080fd5b806351e75e8b1461009857806355f804b3146100d25780636c0360eb146100e7578063715018a6146100fc575b600080fd5b6100bf7f58d247a687ef48f010e2e6107a04d575787163cfb0d70543c421a5001e9f5aab81565b6040519081526020015b60405180910390f35b6100e56100e03660046105b8565b61017e565b005b6100ef6101c8565b6040516100c99190610699565b6100e5610256565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016100c9565b6100e561028c565b6101117f000000000000000000000000000000000000000000000000000000000000000081565b6100ef6101663660046106cc565b6102b9565b6100e56101793660046106e5565b610318565b6000546001600160a01b031633146101b15760405162461bcd60e51b81526004016101a890610715565b60405180910390fd5b80516101c4906001906020840190610509565b5050565b600180546101d59061074a565b80601f01602080910402602001604051908101604052809291908181526020018280546102019061074a565b801561024e5780601f106102235761010080835404028352916020019161024e565b820191906000526020600020905b81548152906001019060200180831161023157829003601f168201915b505050505081565b6000546001600160a01b031633146102805760405162461bcd60e51b81526004016101a890610715565b61028a60006103b3565b565b6000546001600160a01b031633146102b65760405162461bcd60e51b81526004016101a890610715565b33ff5b60606000600180546102ca9061074a565b9050116102e65760405180602001604052806000815250610312565b60016102f183610403565b6040516020016103029291906107a1565b6040516020818303038152906040525b92915050565b6000546001600160a01b031633146103425760405162461bcd60e51b81526004016101a890610715565b6001600160a01b0381166103a75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016101a8565b6103b0816103b3565b50565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6060816104275750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610451578061043b8161085e565b915061044a9050600a8361088f565b915061042b565b60008167ffffffffffffffff81111561046c5761046c6105a2565b6040519080825280601f01601f191660200182016040528015610496576020820181803683370190505b5090505b8415610501576104ab6001836108a3565b91506104b8600a866108ba565b6104c39060306108ce565b60f81b8183815181106104d8576104d86108e6565b60200101906001600160f81b031916908160001a9053506104fa600a8661088f565b945061049a565b949350505050565b8280546105159061074a565b90600052602060002090601f016020900481019282610537576000855561057d565b82601f1061055057805160ff191683800117855561057d565b8280016001018555821561057d579182015b8281111561057d578251825591602001919060010190610562565b5061058992915061058d565b5090565b5b80821115610589576000815560010161058e565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156105ca57600080fd5b813567ffffffffffffffff808211156105e257600080fd5b818401915084601f8301126105f657600080fd5b813581811115610608576106086105a2565b604051601f8201601f19908116603f01168101908382118183101715610630576106306105a2565b8160405282815287602084870101111561064957600080fd5b826020860160208301376000928101602001929092525095945050505050565b60005b8381101561068457818101518382015260200161066c565b83811115610693576000848401525b50505050565b60208152600082518060208401526106b8816040850160208701610669565b601f01601f19169190910160400192915050565b6000602082840312156106de57600080fd5b5035919050565b6000602082840312156106f757600080fd5b81356001600160a01b038116811461070e57600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181811c9082168061075e57607f821691505b6020821081141561077f57634e487b7160e01b600052602260045260246000fd5b50919050565b60008151610797818560208601610669565b9290920192915050565b600080845481600182811c9150808316806107bd57607f831692505b60208084108214156107dd57634e487b7160e01b86526022600452602486fd5b8180156107f157600181146108025761082f565b60ff1986168952848901965061082f565b60008b81526020902060005b868110156108275781548b82015290850190830161080e565b505084890196505b50505050505061083f8185610785565b95945050505050565b634e487b7160e01b600052601160045260246000fd5b600060001982141561087257610872610848565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261089e5761089e610879565b500490565b6000828210156108b5576108b5610848565b500390565b6000826108c9576108c9610879565b500690565b600082198211156108e1576108e1610848565b500190565b634e487b7160e01b600052603260045260246000fdfea26469706673582212206173dd485c3a02ebe50ce22d93ec16199b5f9064bb66e498d6a59f4ebc3807ec64736f6c634300080b0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "src/HippyGhostsRenderer.sol:HippyGhostsRenderer",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 2319,
        "contract": "src/HippyGhostsRenderer.sol:HippyGhostsRenderer",
        "label": "baseURI",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  }
}